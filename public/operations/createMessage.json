{
  "$schema": "https://ref.actionschema.com/openapi.json",
  "x-actionschema": "0.0.1",
  "openapi": "3.1.0",
  "info": {
    "title": "Anthropic Messages API",
    "version": "1.0.0",
    "description": "API specification for Anthropic's Messages endpoint with streaming support"
  },
  "x-origin-servers": [
    {
      "url": "https://api.anthropic.com/v1"
    }
  ],
  "servers": [
    {
      "url": "https://api.anthropic.com/v1"
    },
    {
      "url": "https://anthropic.actionschema.com",
      "description": "This proxy allows direct browser access by default."
    }
  ],
  "paths": {
    "/messages": {
      "post": {
        "summary": "Create a Message",
        "description": "Create a new message, optionally with streaming support",
        "operationId": "createMessage",
        "tags": ["Messages"],
        "parameters": [
          {
            "in": "header",
            "name": "anthropic-dangerous-direct-browser-access",
            "schema": { "type": "boolean" },
            "description": "enable CORS support for the Anthropic API, which means you can make calls to Anthropic's models directly from a browser",
            "required": false
          },
          {
            "in": "header",
            "name": "anthropic-version",
            "schema": {
              "type": "string",
              "enum": ["2023-06-01", "2023-01-01"],
              "example": "2023-06-01"
            },
            "description": "Choose a version",
            "required": true
          }
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMessageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateMessageResponse"
                }
              },
              "text/event-stream": {
                "schema": {
                  "$ref": "#/components/schemas/StreamResponseEvent"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateMessageRequest": {
        "type": "object",
        "required": ["model", "max_tokens", "messages"],
        "properties": {
          "model": {
            "type": "string",
            "description": "The model that will complete your prompt"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnthropicMessage"
            },
            "description": "Input messages for the conversation"
          },
          "max_tokens": {
            "type": "integer",
            "description": "The maximum number of tokens to generate before stopping"
          },
          "metadata": {
            "$ref": "#/components/schemas/RequestMetadata"
          },
          "stop_sequences": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Custom text sequences that will cause the model to stop generating"
          },
          "stream": {
            "type": "boolean",
            "description": "Whether to incrementally stream the response using server-sent events",
            "default": false
          },
          "system": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SystemPrompt"
                }
              }
            ],
            "description": "System prompt to provide context and instructions to Claude"
          },
          "temperature": {
            "type": "number",
            "description": "Amount of randomness injected into the response",
            "minimum": 0,
            "maximum": 1,
            "default": 1
          },
          "tool_choice": {
            "$ref": "#/components/schemas/ToolChoice"
          },
          "tools": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnthropicTool"
            },
            "description": "Definitions of tools that the model may use"
          },
          "top_k": {
            "type": "integer",
            "description": "Only sample from the top K options for each subsequent token"
          },
          "top_p": {
            "type": "number",
            "description": "Use nucleus sampling"
          }
        }
      },
      "AnthropicMessage": {
        "type": "object",
        "required": ["role", "content"],
        "properties": {
          "role": {
            "type": "string",
            "enum": ["user", "assistant"],
            "description": "The role of the message sender"
          },
          "content": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContentBlock"
                }
              }
            ],
            "description": "The content of the message"
          }
        }
      },
      "ContentBlock": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/TextContent"
          },
          {
            "$ref": "#/components/schemas/ImageContent"
          },
          {
            "$ref": "#/components/schemas/ToolUseContent"
          },
          {
            "$ref": "#/components/schemas/ToolResultContent"
          }
        ]
      },
      "TextContent": {
        "type": "object",
        "required": ["type", "text"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["text"]
          },
          "text": {
            "type": "string"
          }
        }
      },
      "ImageContent": {
        "type": "object",
        "required": ["type", "source"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["image"]
          },
          "source": {
            "type": "object",
            "required": ["type", "media_type", "data"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["base64"]
              },
              "media_type": {
                "type": "string",
                "enum": ["image/jpeg", "image/png", "image/gif", "image/webp"]
              },
              "data": {
                "type": "string"
              }
            }
          }
        }
      },
      "ToolUseContent": {
        "type": "object",
        "required": ["type", "id", "name", "input"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["tool_use"]
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "input": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "ToolResultContent": {
        "type": "object",
        "required": ["type", "tool_use_id", "content"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["tool_result"]
          },
          "tool_use_id": {
            "type": "string"
          },
          "is_error": {
            "type": "boolean"
          },
          "content": {
            "type": "string"
          }
        }
      },
      "RequestMetadata": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "An external identifier for the user associated with the request"
          }
        }
      },
      "SystemPrompt": {
        "type": "object",
        "required": ["type", "text"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["text"]
          },
          "text": {
            "type": "string"
          },
          "cache_control": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["ephemeral"]
                  }
                }
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "ToolChoice": {
        "description": "Required if you specify tools!",
        "oneOf": [
          {
            "$ref": "#/components/schemas/AutoToolChoice"
          },
          {
            "$ref": "#/components/schemas/AnyToolChoice"
          },
          {
            "$ref": "#/components/schemas/SpecificToolChoice"
          }
        ]
      },
      "AutoToolChoice": {
        "type": "object",
        "required": ["type"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["auto"]
          }
        }
      },
      "AnyToolChoice": {
        "type": "object",
        "required": ["type"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["any"]
          }
        }
      },
      "SpecificToolChoice": {
        "type": "object",
        "required": ["type", "name"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["tool"]
          },
          "name": {
            "type": "string"
          }
        }
      },
      "AnthropicTool": {
        "type": "object",
        "required": ["name", "input_schema"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the tool"
          },
          "description": {
            "type": "string",
            "description": "Description of what this tool does"
          },
          "input_schema": {
            "type": "object",
            "additionalProperties": true,
            "description": "JSON schema for this tool's input"
          }
        }
      },
      "CreateMessageResponse": {
        "type": "object",
        "required": [
          "id",
          "type",
          "role",
          "content",
          "model",
          "stop_reason",
          "usage"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique object identifier"
          },
          "type": {
            "type": "string",
            "enum": ["message"],
            "description": "Object type. Always 'message' for Messages"
          },
          "role": {
            "type": "string",
            "enum": ["assistant"],
            "description": "Conversational role of the generated message. Always 'assistant'"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentBlock"
            },
            "description": "Content generated by the model"
          },
          "model": {
            "type": "string",
            "description": "The model that handled the request"
          },
          "stop_reason": {
            "type": "string",
            "enum": ["end_turn", "max_tokens", "stop_sequence", "tool_use"],
            "nullable": true,
            "description": "The reason that generation stopped"
          },
          "stop_sequence": {
            "type": "string",
            "nullable": true,
            "description": "Which custom stop sequence was generated, if any"
          },
          "usage": {
            "$ref": "#/components/schemas/UsageInfo"
          }
        }
      },
      "UsageInfo": {
        "type": "object",
        "required": ["input_tokens", "output_tokens"],
        "properties": {
          "input_tokens": {
            "type": "integer",
            "description": "The number of input tokens which were used"
          },
          "cache_creation_input_tokens": {
            "type": "integer",
            "nullable": true,
            "description": "(prompt caching beta) The number of input tokens used to create the cache entry"
          },
          "cache_read_input_tokens": {
            "type": "integer",
            "nullable": true,
            "description": "(prompt caching beta) The number of input tokens read from the cache"
          },
          "output_tokens": {
            "type": "integer",
            "description": "The number of output tokens which were used"
          }
        }
      },
      "StreamResponseEvent": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/MessageStartEvent"
          },
          {
            "$ref": "#/components/schemas/ContentBlockStartEvent"
          },
          {
            "$ref": "#/components/schemas/ContentBlockDeltaEvent"
          },
          {
            "$ref": "#/components/schemas/ContentBlockStopEvent"
          },
          {
            "$ref": "#/components/schemas/MessageDeltaEvent"
          },
          {
            "$ref": "#/components/schemas/MessageStopEvent"
          },
          {
            "$ref": "#/components/schemas/PingEvent"
          },
          {
            "$ref": "#/components/schemas/ErrorEvent"
          }
        ]
      },
      "MessageStartEvent": {
        "type": "object",
        "required": ["type", "message"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["message_start"]
          },
          "message": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": ["message"]
              },
              "role": {
                "type": "string",
                "enum": ["assistant"]
              },
              "content": {
                "type": "array",
                "items": {}
              },
              "model": {
                "type": "string"
              },
              "stop_reason": {
                "type": "string",
                "enum": ["end_turn", "max_tokens", "stop_sequence", "tool_use"],
                "nullable": true
              },
              "stop_sequence": {
                "type": "string",
                "nullable": true
              },
              "usage": {
                "$ref": "#/components/schemas/UsageInfo"
              }
            }
          }
        }
      },
      "ContentBlockStartEvent": {
        "type": "object",
        "required": ["type", "index", "content_block"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["content_block_start"]
          },
          "index": {
            "type": "integer"
          },
          "content_block": {
            "$ref": "#/components/schemas/ContentBlock"
          }
        }
      },
      "ContentBlockDeltaEvent": {
        "type": "object",
        "required": ["type", "index", "delta"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["content_block_delta"]
          },
          "index": {
            "type": "integer"
          },
          "delta": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TextDelta"
              },
              {
                "$ref": "#/components/schemas/InputJsonDelta"
              }
            ]
          }
        }
      },
      "TextDelta": {
        "type": "object",
        "required": ["type", "text"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["text_delta"]
          },
          "text": {
            "type": "string"
          }
        }
      },
      "InputJsonDelta": {
        "type": "object",
        "required": ["type", "partial_json"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["input_json_delta"]
          },
          "partial_json": {
            "type": "string"
          }
        }
      },
      "ContentBlockStopEvent": {
        "type": "object",
        "required": ["type", "index"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["content_block_stop"]
          },
          "index": {
            "type": "integer"
          }
        }
      },
      "MessageDeltaEvent": {
        "type": "object",
        "required": ["type", "delta", "usage"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["message_delta"]
          },
          "delta": {
            "type": "object",
            "properties": {
              "stop_reason": {
                "type": "string",
                "enum": ["end_turn", "max_tokens", "stop_sequence", "tool_use"],
                "nullable": true
              },
              "stop_sequence": {
                "type": "string",
                "nullable": true
              }
            }
          },
          "usage": {
            "type": "object",
            "properties": {
              "output_tokens": {
                "type": "integer"
              }
            }
          }
        }
      },
      "MessageStopEvent": {
        "type": "object",
        "required": ["type"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["message_stop"]
          }
        }
      },
      "PingEvent": {
        "type": "object",
        "required": ["type"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["ping"]
          }
        }
      },
      "ErrorEvent": {
        "type": "object",
        "required": ["type", "error"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["error"]
          },
          "error": {
            "type": "object",
            "required": ["type", "message"],
            "properties": {
              "type": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            }
          }
        }
      },
      "ServerSentEvent": {
        "type": "object",
        "required": ["event", "data"],
        "properties": {
          "event": {
            "type": "string"
          },
          "data": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key",
        "description": "Your unique API key for authentication"
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ]
}
