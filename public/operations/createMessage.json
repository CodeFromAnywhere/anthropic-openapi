{
  "$schema": "https://ref.actionschema.com/openapi.json",
  "x-actionschema": "0.0.1",
  "openapi": "3.1.0",
  "info": {
    "title": "Anthropic Messages API",
    "version": "1.0.0",
    "description": "API specification for Anthropic's Messages endpoint with streaming support"
  },
  "x-origin-servers": [
    {
      "url": "https://api.anthropic.com/v1"
    }
  ],
  "servers": [
    {
      "url": "https://api.anthropic.com/v1"
    },
    {
      "url": "https://anthropic.actionschema.com",
      "description": "This proxy allows direct browser access by default."
    }
  ],
  "paths": {
    "/messages": {
      "post": {
        "summary": "Create a Message",
        "description": "Create a new message, optionally with streaming support",
        "operationId": "createMessage",
        "tags": ["Messages"],
        "parameters": [
          {
            "in": "header",
            "name": "anthropic-dangerous-direct-browser-access",
            "schema": { "type": "boolean" },
            "description": "enable CORS support for the Anthropic API, which means you can make calls to Anthropicâ€™s models directly from a browser",
            "required": false
          }
        ],
        "security": [
          {
            "ApiKeyAuth": [],
            "AnthropicVersion": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              },
              "text/event-stream": {
                "schema": {
                  "$ref": "#/components/schemas/StreamingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MessageRequest": {
        "type": "object",
        "required": ["model", "max_tokens", "messages"],
        "properties": {
          "model": {
            "type": "string",
            "description": "The model that will complete your prompt"
          },
          "max_tokens": {
            "type": "integer",
            "description": "The maximum number of tokens to generate before stopping"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "description": "Input messages"
          },
          "stream": {
            "type": "boolean",
            "description": "Whether to incrementally stream the response using server-sent events",
            "default": false
          },
          "temperature": {
            "type": "number",
            "description": "Amount of randomness injected into the response",
            "minimum": 0,
            "maximum": 1,
            "default": 1
          },
          "system": {
            "type": "string",
            "description": "System prompt to guide the model's behavior"
          },
          "tools": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tool"
            },
            "description": "Definitions of tools that the model may use"
          },
          "tool_choice": {
            "type": "object",
            "description": "How the model should use the provided tools"
          }
        }
      },
      "Message": {
        "type": "object",
        "required": ["role", "content"],
        "properties": {
          "role": {
            "type": "string",
            "enum": ["user", "assistant"],
            "description": "The role of the message sender"
          },
          "content": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContentBlock"
                }
              }
            ],
            "description": "The content of the message"
          }
        }
      },
      "ContentBlock": {
        "type": "object",
        "required": ["type"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["text", "image"]
          },
          "text": {
            "type": "string"
          },
          "source": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["base64"]
              },
              "media_type": {
                "type": "string"
              },
              "data": {
                "type": "string"
              }
            }
          }
        }
      },
      "Tool": {
        "type": "object",
        "required": ["name", "description", "input_schema"],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "input_schema": {
            "type": "object"
          }
        }
      },
      "MessageResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["message"]
          },
          "role": {
            "type": "string",
            "enum": ["assistant"]
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentBlock"
            }
          },
          "model": {
            "type": "string"
          },
          "stop_reason": {
            "type": "string",
            "enum": ["end_turn", "max_tokens", "stop_sequence", "tool_use"]
          },
          "stop_sequence": {
            "type": "string",
            "nullable": true
          },
          "usage": {
            "type": "object",
            "properties": {
              "input_tokens": {
                "type": "integer"
              },
              "output_tokens": {
                "type": "integer"
              }
            }
          }
        }
      },
      "StreamingResponse": {
        "type": "object",
        "description": "Server-sent events for streaming responses",
        "properties": {
          "event": {
            "type": "string",
            "enum": [
              "message_start",
              "content_block_start",
              "content_block_delta",
              "content_block_stop",
              "message_delta",
              "message_stop",
              "ping",
              "error"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "message_start",
                  "content_block_start",
                  "content_block_delta",
                  "content_block_stop",
                  "message_delta",
                  "message_stop",
                  "ping",
                  "error"
                ]
              },
              "index": {
                "type": "integer",
                "description": "Index of the content block (for content block events)"
              },
              "message": {
                "$ref": "#/components/schemas/MessageResponse"
              },
              "content_block": {
                "$ref": "#/components/schemas/ContentBlock"
              },
              "delta": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["text_delta"]
                      },
                      "text": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["input_json_delta"]
                      },
                      "partial_json": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "stop_reason": {
                        "type": "string",
                        "enum": [
                          "end_turn",
                          "max_tokens",
                          "stop_sequence",
                          "tool_use"
                        ]
                      },
                      "stop_sequence": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                ]
              },
              "usage": {
                "type": "object",
                "properties": {
                  "output_tokens": {
                    "type": "integer"
                  }
                }
              },
              "error": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key",
        "description": "Your unique API key for authentication"
      },
      "AnthropicVersion": {
        "type": "apiKey",
        "in": "header",
        "name": "anthropic-version",
        "description": "The version of the Anthropic API you want to use. Use a date in the format YYYY-MM-DD, e.g., '2023-06-01'. Check Anthropic's documentation for the latest version."
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": [],
      "AnthropicVersion": []
    }
  ]
}
